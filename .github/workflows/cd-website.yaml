name: "Continuous Delivery (website)"

on:
  workflow_run:
    workflows: ["Continuous Integration (website)"]
    types: [completed]
    branches: [main]

permissions:
  contents: read

defaults:
  run:
    shell: bash
    working-directory: website/  

jobs:
  fetch-version:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-24.04
    outputs:
      release_version: ${{ steps.get_version.outputs.VERSION }}
      is_release: ${{ steps.check_snapshot.outputs.RELEASE }}

    steps:
      - name: üõ°Ô∏è Harden the runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: üì¶ Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0

      - name: üá≥ Setup Node.js
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6
        with:
          node-version: "22.21.0"

      - name: üè∑Ô∏è Get package version
        id: get_version
        run: |
          VERSION=$(node -p 'require("./package.json").version')
          echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"

      - name: üîç Check if version is SNAPSHOT
        id: check_snapshot
        run: |
          VERSION="${{ steps.get_version.outputs.VERSION }}"
          if [[ "$VERSION" == *"-SNAPSHOT"* ]]; then
            echo "RELEASE=false" >> $GITHUB_OUTPUT
          else
            echo "RELEASE=true" >> $GITHUB_OUTPUT
          fi
          echo "Release Version: $VERSION"

  release:
    needs: [fetch-version]
    if: ${{ github.event.workflow_run.conclusion == 'success' && needs.fetch-version.outputs.is_release == 'true' }}
    runs-on: ubuntu-24.04
    concurrency:
      group: website-release-${{ needs.fetch-version.outputs.release_version }}
      cancel-in-progress: false

    permissions:
      contents: write
      id-token: write
      attestations: write
      actions: read

    env:
      RELEASE_VERSION: ${{ needs.fetch-version.outputs.release_version }}

    steps:
      - name: üì¶ Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          token: ${{ secrets.RELEASE_PAT }}
          fetch-depth: 0

      - name: üá≥ Setup Node.js
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6
        with:
          node-version: "22.21.0"

      - name: ‚¨áÔ∏è Download build artifact
        uses: dawidd6/action-download-artifact@ac66b43f0e6a346234dd65d4d0c8fbb31cb316e5 # v11
        with:
          workflow: ci-website.yaml
          name: website-${{ github.event.workflow_run.head_sha }}
          path: website/dist
          github_token: ${{ github.token }}
          run_id: ${{ github.event.workflow_run.id }}

      - name: üìù Add license
        run: |
           cp "${{ github.workspace }}/LICENSE" dist/LICENSE

      - name: üì¶ Create archive
        run: |
          tar -czvf website-${{ env.RELEASE_VERSION }}.tar.gz -C dist .
          shasum -a 512 website-${{ env.RELEASE_VERSION }}.tar.gz > website-${{ env.RELEASE_VERSION }}.tar.gz.sha512

      - name: üìù Attest release provenance
        uses: actions/attest-build-provenance@977bb373ede98d70efdf65b84cb5f73e068dcc2a # v3
        with:
          subject-path: "${{ github.workspace }}/website/website-${{ env.RELEASE_VERSION }}.tar.gz"
      
      - name: üõ†Ô∏è Setup git
        run: |
          git config --global user.name "radagastbot[bot]"
          git config --global user.email "radagastbot[bot]@users.noreply.github.com"

      - name: üîñ Create Git Tag
        run: |
          git tag "kaizen-website/v${{ env.RELEASE_VERSION }}" "${{ github.event.workflow_run.head_sha }}"
          git push origin "kaizen-website/v${{ env.RELEASE_VERSION }}"

      - name: üìù Generate changelog
        uses: orhun/git-cliff-action@d77b37db2e3f7398432d34b72a12aa3e2ba87e51 # v4
        with:
          config: cliff.toml
          args: -v --latest --strip header
        env:
          OUTPUT: CHANGELOG.md
          GITHUB_REPO: ${{ github.repository }}

      - name: üöÄ Create GitHub Release
        uses: softprops/action-gh-release@6da8fa9354ddfdc4aeace5fc48d7f679b5214090 # v2
        with:
          files: |
            website/website-${{ env.RELEASE_VERSION }}.tar.gz
            website/website-${{ env.RELEASE_VERSION }}.tar.gz.sha512
          tag_name: kaizen-website/v${{ env.RELEASE_VERSION }}
          name: kaizen-website v${{ env.RELEASE_VERSION }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: true

      - name: üî¢ Generate next package Version
        run: |
          MAJOR=$(echo ${{ env.RELEASE_VERSION }} | cut -d. -f1)
          MINOR=$(echo ${{ env.RELEASE_VERSION }} | cut -d. -f2)
          PATCH=$(echo ${{ env.RELEASE_VERSION }} | cut -d. -f3)
          PATCH=$((PATCH + 1))
          NEXT_PACKAGE_VERSION="$MAJOR.$MINOR.$PATCH-SNAPSHOT"
          echo "Next Version will be: ${NEXT_PACKAGE_VERSION}"
          echo "NEXT_PACKAGE_VERSION=${NEXT_PACKAGE_VERSION}" >> $GITHUB_ENV

      - name: ‚¨ÜÔ∏è Increment package version
        run: |
          npm version ${{ env.NEXT_PACKAGE_VERSION }} --no-git-tag-version

      - name: üì§ Push new package version to repo
        run: |
          git config user.name "radagastbot[bot]"
          git config user.email "radagastbot[bot]@users.noreply.github.com"
          git add package.json package-lock.json
          git commit -m "chore(release): set next website SNAPSHOT version"
          git push
