const fs = require("fs");
const path = require("path");

const dataJsonPath = path.join(__dirname, "..", "public", "data.json");
const outputDir = path.join(__dirname, "..", "src", "lib");
const outputPath = path.join(outputDir, "db.ts");

try {
  // 1. Read data.json
  const rawData = fs.readFileSync(dataJsonPath, "utf-8");
  const jsonData = JSON.parse(rawData);

  // 2. Transform data
  const transformedData = {};
  for (const date in jsonData) {
    if (Object.hasOwn(jsonData, date)) {
      transformedData[date] = jsonData[date].map(({ type_of, ...rest }) => {
        let type = type_of;
        if (type === "algo") {
          type = "algorithm";
        } else if (type === "sysdes") {
          type = "system-design";
        }
        // remove type_of and return a new object
        return { ...rest, type };
      });
    }
  }

  // 3. Generate file content
  const dataString = JSON.stringify(transformedData, null, 2);
  const fileContent = `// This file is auto-generated by the pre-build script. Do not edit manually.
import { KaizenData } from "@/interfaces/kaizen-data";

export const kaizenData: KaizenData = ${dataString};
`;

  // 4. Write to db.ts
  // Ensure directory exists
  if (!fs.existsSync(outputDir)) {
    fs.mkdirSync(outputDir, { recursive: true });
  }
  fs.writeFileSync(outputPath, fileContent, "utf-8");

  console.log(`Successfully generated ${outputPath}`);
} catch (error) {
  console.error("Error during pre-build script execution:", error);
  process.exit(1);
}
